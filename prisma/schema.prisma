generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model users {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  password    String        @db.VarChar(255)
  verified   Boolean?      @default(false)
  token       String       @unique
  memberships memberships[]
  teams       teams[]
}

model conversations {
  id               Int      @id @default(autoincrement())
  session_id       Int
  user_prompt      String
  generated_result String
  sessions         sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model memberships {
  id      Int   @id @default(autoincrement())
  team_id Int
  user_id Int
  teams   teams @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([team_id, user_id])
}

model sessions {
  id            Int             @id @default(autoincrement())
  team_id       Int
  title         String          @db.VarChar(255)
  conversations conversations[]
  teams         teams           @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model teams {
  id              Int           @id @default(autoincrement())
  name            String        @db.VarChar(255)
  owner_id        Int
  balance_credits Int           @default(9)
  memberships     memberships[]
  sessions        sessions[]
  users           users         @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
